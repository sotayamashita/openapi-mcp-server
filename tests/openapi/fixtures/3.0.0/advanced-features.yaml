openapi: 3.0.0
info:
  title: Advanced Features API
  version: 1.0.0
  description: API demonstrating OpenAPI 3.0.0 specific features
paths:
  /pets:
    post:
      summary: Create a new pet
      operationId: createPet
      requestBody:
        description: The pet to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetRequest"
      responses:
        "201":
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /animals:
    get:
      summary: Gets an animal
      operationId: getAnimal
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [dog, cat, bird]
      responses:
        "200":
          description: Returns an animal
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Animal"
components:
  schemas:
    NullableString:
      type: string
      nullable: true
      example: null
    PetRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
          enum: [dog, cat, bird]
        age:
          type: integer
          format: int32
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
    Pet:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [dog, cat, bird]
        age:
          type: integer
          format: int32
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
    Animal:
      oneOf:
        - $ref: "#/components/schemas/Dog"
        - $ref: "#/components/schemas/Cat"
        - $ref: "#/components/schemas/Bird"
      discriminator:
        propertyName: type
        mapping:
          dog: "#/components/schemas/Dog"
          cat: "#/components/schemas/Cat"
          bird: "#/components/schemas/Bird"
    Pet_Base:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
    Dog:
      allOf:
        - $ref: "#/components/schemas/Pet_Base"
        - type: object
          properties:
            type:
              type: string
              enum: [dog]
            barkVolume:
              type: integer
              format: int32
    Cat:
      allOf:
        - $ref: "#/components/schemas/Pet_Base"
        - type: object
          properties:
            type:
              type: string
              enum: [cat]
            huntingSkill:
              type: string
              enum: [clueless, lazy, adventurous, aggressive]
    Bird:
      allOf:
        - $ref: "#/components/schemas/Pet_Base"
        - type: object
          properties:
            type:
              type: string
              enum: [bird]
            wingSpan:
              type: number
              format: float
    Measurements:
      type: object
      properties:
        height:
          type: number
        weight:
          type: number
          nullable: true
    SearchResult:
      type: object
      properties:
        result:
          anyOf:
            - $ref: "#/components/schemas/Dog"
            - $ref: "#/components/schemas/Cat"
            - $ref: "#/components/schemas/Bird"
            - type: "null"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
